chapter \<open>Generated by Lem from \<open>debug.lem\<close>.\<close>

theory "Lem_debug" 

imports
  Main

begin 



\<comment> \<open>\<open> debugging functions; these should *not* be used in production code,
   but are invaluable in debugging the OCaml extraction, as long as
   one pays attention to the interaction with monads;
   the typical use pattern is:
     let _ = Debug.print_string "..." in
     ...

   With monads, the "let _" should be out of the monad, not wrapped
   inside the monad (otherwise, the evaluation order is that of the
   monad).
\<close>\<close>

\<comment> \<open>\<open>val print_string : string -> unit\<close>\<close>
definition print_string  :: \<open> string \<Rightarrow> unit \<close>  where 
     \<open> print_string str = ( ()  )\<close> 
  for  str  :: " string "


\<comment> \<open>\<open>val print_endline : string -> unit\<close>\<close>
definition print_endline  :: \<open> string \<Rightarrow> unit \<close>  where 
     \<open> print_endline str = ( ()  )\<close> 
  for  str  :: " string "

end
